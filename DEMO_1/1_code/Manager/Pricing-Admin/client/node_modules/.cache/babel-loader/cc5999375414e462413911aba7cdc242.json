{"ast":null,"code":"import _classCallCheck from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/inherits\";/* Charles Owen\n* Comparison graph page. No mount data, uses\n* date picker to retrieve relevent data and\n* calculates using backend API calls.\n*/ //import React from 'react';\nimport React,{Component}from'react';//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport{Container,Row,Col}from'reactstrap';import{Line}from\"react-chartjs-2\";import{MDBContainer}from\"mdbreact\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import axios from'axios';var PriceModelComparison=/*#__PURE__*/function(_Component){_inherits(PriceModelComparison,_Component);function PriceModelComparison(){var _this;_classCallCheck(this,PriceModelComparison);_this=_possibleConstructorReturn(this,_getPrototypeOf(PriceModelComparison).call(this));_this.handleDateChange=_this.handleDateChange.bind(_assertThisInitialized(_this));_this.state={base_rate:\"Try refreshing\",base_rate_mult:\"Try refreshing\",min_thresh:\"Try refreshing\",max_thresh:\"Try refreshing\",test:[1],new_base_rate:\"\",new_base_rate_mult:\"\",new_min_thresh:\"\",new_max_thresh:\"\",total_projected_revenue:\"\",actual_revenue_total:\"\",startDate:new Date(),dataLine:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Projected Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[]},{label:\"Actual Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[]}]},dataLine2:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Actual Occupancy\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[]},{label:\"Occupancy Weights\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[]}]}};return _this;}_createClass(PriceModelComparison,[{key:\"appendLeadingZeros\",value:function appendLeadingZeros(value){if(value<=9){return\"0\"+value;}return value;}},{key:\"handleDateChange\",value:function handleDateChange(dateObj){var _this2=this;this.setState({startDate:dateObj});var day=this.appendLeadingZeros(dateObj.getDate());var month=this.appendLeadingZeros(dateObj.getMonth()+1);var year=this.appendLeadingZeros(dateObj.getFullYear());var d=year+\"-\"+month+\"-\"+day;console.log(d);axios.post('http://localhost:5000/api/historic',{date:d}).then(function(historicmodel){return _this2.setState({base_rate:historicmodel.data[0].base_rate,base_rate_mult:historicmodel.data[0].base_rate_mult,min_thresh:historicmodel.data[0].min_thresh,max_thresh:historicmodel.data[0].max_thresh,total_projected_revenue:historicmodel.data[0].total_proj_rev,actual_revenue_total:historicmodel.data[0].actual_revenue_total,dataLine:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Projected Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:historicmodel.data[0].live_revenue},{label:\"Actual Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:historicmodel.data[0].actual_revenue}]},dataLine2:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Actual Occupancy\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:historicmodel.data[0].occupancy_percent},{label:\"Occupancy Weights\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:historicmodel.data[0].actual_occupancy_percent}]}});});}},{key:\"render\",value:function render(){return React.createElement(Container,null,React.createElement(MDBContainer,null,React.createElement(\"h3\",{className:\"mt-5\"},\"Projected vs. Actual Revenue\"),React.createElement(Line,{data:this.state.dataLine,options:{responsive:true}}),React.createElement(\"h3\",{className:\"mt-5\"},\"Actual Occupacy Rate vs. Occupancy Weights \"),React.createElement(Line,{data:this.state.dataLine2,options:{responsive:true}})),React.createElement(Row,null,React.createElement(\"h5\",null,\"Select a date to review:\")),React.createElement(Row,null,React.createElement(DatePicker,{selected:this.state.startDate,onChange:this.handleDateChange,dateFormat:\"yyyy-MM-dd\"})),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"h5\",null,\"Projected Revenue for the Day: $\",this.state.total_projected_revenue))),React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"h5\",null,\"Actual Revenue for the Day: $\",this.state.actual_revenue_total))),React.createElement(Row,null,React.createElement(Col,{sm:\"3\"},\"Base Rate:\"),React.createElement(Col,null,\"$\",this.state.base_rate,\"/hr\")),React.createElement(Row,null,React.createElement(Col,{sm:\"3\"},\"Rate Multiplier:\"),React.createElement(Col,null,this.state.base_rate_mult)),React.createElement(Row,null,React.createElement(Col,{sm:\"3\"},\"Min. Occ. Thresh:\"),React.createElement(Col,null,this.state.min_thresh,\"%\")),React.createElement(Row,null,React.createElement(Col,{sm:\"3\"},\"Max. Occ. Thresh:\"),React.createElement(Col,null,this.state.max_thresh,\"%\")));}}]);return PriceModelComparison;}(Component);export{PriceModelComparison as default};","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/PriceModelComparison.js"],"names":["React","Component","Container","Row","Col","Line","MDBContainer","DatePicker","axios","PriceModelComparison","handleDateChange","bind","state","base_rate","base_rate_mult","min_thresh","max_thresh","test","new_base_rate","new_base_rate_mult","new_min_thresh","new_max_thresh","total_projected_revenue","actual_revenue_total","startDate","Date","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataLine2","value","dateObj","setState","day","appendLeadingZeros","getDate","month","getMonth","year","getFullYear","d","console","log","post","date","then","historicmodel","total_proj_rev","live_revenue","actual_revenue","occupancy_percent","actual_occupancy_percent","responsive"],"mappings":"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","sourcesContent":["/* Charles Owen\n* Comparison graph page. No mount data, uses\n* date picker to retrieve relevent data and\n* calculates using backend API calls.\n*/\n//import React from 'react';\nimport React, { Component } from 'react';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nexport default class PriceModelComparison extends Component {\n  constructor(){\n  super();\n  this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        test: [1],\n        new_base_rate: \"\",\n        new_base_rate_mult: \"\",\n        new_min_thresh: \"\",\n        new_max_thresh: \"\",\n        total_projected_revenue: \"\",\n        actual_revenue_total: \"\",\n        startDate: new Date(),\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Projected Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n              \n            },\n            {\n              label: \"Actual Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n            }\n          ]\n        },\n        dataLine2: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Actual Occupancy\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n              \n            },\n            {\n              label: \"Occupancy Weights\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n            }\n          ]\n        }\n      }\n    }\n    appendLeadingZeros(value){\n      if(value <= 9){\n        return \"0\"+value;\n      }\n      return value;\n    }\n    handleDateChange(dateObj){\n      this.setState({startDate: dateObj});\n      let day = this.appendLeadingZeros(dateObj.getDate());\n      let month = this.appendLeadingZeros(dateObj.getMonth()+1);\n      let year = this.appendLeadingZeros(dateObj.getFullYear());\n      let d = year + \"-\" + month + \"-\" + day;\n      console.log(d);\n      axios.post('http://localhost:5000/api/historic', {date: d}).then(historicmodel => \n          this.setState({\n            base_rate: historicmodel.data[0].base_rate,\n            base_rate_mult: historicmodel.data[0].base_rate_mult,\n            min_thresh: historicmodel.data[0].min_thresh,\n            max_thresh: historicmodel.data[0].max_thresh,\n            total_projected_revenue: historicmodel.data[0].total_proj_rev,\n            actual_revenue_total: historicmodel.data[0].actual_revenue_total,\n            dataLine: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Projected Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].live_revenue\n                  \n                },\n                {\n                  label: \"Actual Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].actual_revenue\n                }\n              ]\n            },\n            dataLine2: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Actual Occupancy\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].occupancy_percent\n                  \n                },\n                {\n                  label: \"Occupancy Weights\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].actual_occupancy_percent\n                }\n              ]\n            }\n          }));\n        }\n    render() {\n      return (\n        <Container>\n          <MDBContainer>\n            <h3 className=\"mt-5\">Projected vs. Actual Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            <h3 className=\"mt-5\">Actual Occupacy Rate vs. Occupancy Weights </h3>\n            <Line data={this.state.dataLine2} options={{ responsive: true }} />\n            </MDBContainer>\n          <Row>\n            <h5>Select a date to review:</h5>\n          </Row>\n          <Row>\n            <DatePicker \n                  selected={this.state.startDate}  \n                  onChange={this.handleDateChange}\n                  dateFormat=\"yyyy-MM-dd\"/>\n          </Row>\n          <Row>\n            <p></p>\n          </Row>\n          <Row>\n            <Col>\n            <h5>Projected Revenue for the Day: ${this.state.total_projected_revenue}</h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n            <h5>Actual Revenue for the Day: ${this.state.actual_revenue_total}</h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"3\">\n            Base Rate:\n            </Col>\n            <Col>\n            ${this.state.base_rate}/hr\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"3\">\n            Rate Multiplier:\n            </Col>\n            <Col>\n            {this.state.base_rate_mult}\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"3\">\n            Min. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.min_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"3\">\n            Max. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.max_thresh}%\n            </Col>\n        </Row>\n\n        </Container>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}