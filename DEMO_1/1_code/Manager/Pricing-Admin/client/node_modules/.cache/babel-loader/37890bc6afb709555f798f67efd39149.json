{"ast":null,"code":"var _jsxFileName = \"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/PriceModelComparison.js\";\n//import React from 'react';\nimport React, { Component } from 'react'; //import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nexport default class PriceModelComparison extends Component {\n  constructor() {\n    super();\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n      base_rate: \"Try refreshing\",\n      base_rate_mult: \"Try refreshing\",\n      min_thresh: \"Try refreshing\",\n      max_thresh: \"Try refreshing\",\n      test: [1],\n      new_base_rate: \"\",\n      new_base_rate_mult: \"\",\n      new_min_thresh: \"\",\n      new_max_thresh: \"\",\n      total_projected_revenue: \"\",\n      startDate: new Date(),\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Projected Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }, {\n          label: \"Actual Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }]\n      },\n      dataLine2: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Actual Occupancy\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }, {\n          label: \"Occupancy Weights\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: []\n        }]\n      }\n    };\n  }\n\n  appendLeadingZeros(value) {\n    if (value <= 9) {\n      return \"0\" + value;\n    }\n\n    return value;\n  }\n\n  handleDateChange(dateObj) {\n    this.setState({\n      startDate: dateObj\n    });\n    let day = this.appendLeadingZeros(dateObj.getDate());\n    let month = this.appendLeadingZeros(dateObj.getMonth() + 1);\n    let year = this.appendLeadingZeros(dateObj.getFullYear());\n    let d = year + \"-\" + month + \"-\" + day;\n    console.log(d);\n    axios.post('http://localhost:5000/api/historic', {\n      date: d\n    }).then(historicmodel => this.setState({\n      base_rate: historicmodel.data[0].base_rate,\n      base_rate_mult: historicmodel.data[0].base_rate_mult,\n      min_thresh: historicmodel.data[0].min_thresh,\n      max_thresh: historicmodel.data[0].max_thresh,\n      total_projected_revenue: historicmodel.data[0].total_projected_revenue,\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Projected Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: historicmodel.data[0].live_revenue\n        }, {\n          label: \"Actual Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: historicmodel.data[0].actual_revenue\n        }]\n      },\n      dataLine2: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Actual Occupancy\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: historicmodel.data[0].occupancy_percent\n        }, {\n          label: \"Occupancy Weights\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: historicmodel.data[0].actual_occupancy_percent\n        }]\n      }\n    }));\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Projected vs. Actual Revenue\"), React.createElement(Line, {\n      data: this.state.dataLine,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Actual Occupacy Rate vs. Occupancy Weights \"), React.createElement(Line, {\n      data: this.state.dataLine2,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Select a date to review:\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleDateChange,\n      dateFormat: \"yyyy-MM-dd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Projected Revenue for the Day: $\", this.state.total_projected_revenue))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Actual Revenue for the Day: $\", this.state.total_projected_revenue))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Base Rate:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"$\", this.state.base_rate, \"/hr\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Rate Multiplier:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, this.state.base_rate_mult)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Min. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.state.min_thresh, \"%\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Max. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, this.state.max_thresh, \"%\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/PriceModelComparison.js"],"names":["React","Component","Container","Row","Col","Line","MDBContainer","DatePicker","axios","PriceModelComparison","constructor","handleDateChange","bind","state","base_rate","base_rate_mult","min_thresh","max_thresh","test","new_base_rate","new_base_rate_mult","new_min_thresh","new_max_thresh","total_projected_revenue","startDate","Date","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataLine2","appendLeadingZeros","value","dateObj","setState","day","getDate","month","getMonth","year","getFullYear","d","console","log","post","date","then","historicmodel","live_revenue","actual_revenue","occupancy_percent","actual_occupancy_percent","render","responsive"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nexport default class PriceModelComparison extends Component {\n  constructor(){\n  super();\n  this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        test: [1],\n        new_base_rate: \"\",\n        new_base_rate_mult: \"\",\n        new_min_thresh: \"\",\n        new_max_thresh: \"\",\n        total_projected_revenue: \"\",\n        startDate: new Date(),\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Projected Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n              \n            },\n            {\n              label: \"Actual Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n            }\n          ]\n        },\n        dataLine2: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Actual Occupancy\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n              \n            },\n            {\n              label: \"Occupancy Weights\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n            }\n          ]\n        }\n      }\n    }\n    appendLeadingZeros(value){\n      if(value <= 9){\n        return \"0\"+value;\n      }\n      return value;\n    }\n    handleDateChange(dateObj){\n      this.setState({startDate: dateObj});\n      let day = this.appendLeadingZeros(dateObj.getDate());\n      let month = this.appendLeadingZeros(dateObj.getMonth()+1);\n      let year = this.appendLeadingZeros(dateObj.getFullYear());\n      let d = year + \"-\" + month + \"-\" + day;\n      console.log(d);\n      axios.post('http://localhost:5000/api/historic', {date: d}).then(historicmodel => \n          this.setState({\n            base_rate: historicmodel.data[0].base_rate,\n            base_rate_mult: historicmodel.data[0].base_rate_mult,\n            min_thresh: historicmodel.data[0].min_thresh,\n            max_thresh: historicmodel.data[0].max_thresh,\n            total_projected_revenue: historicmodel.data[0].total_projected_revenue,\n            dataLine: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Projected Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].live_revenue\n                  \n                },\n                {\n                  label: \"Actual Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].actual_revenue\n                }\n              ]\n            },\n            dataLine2: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Actual Occupancy\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].occupancy_percent\n                  \n                },\n                {\n                  label: \"Occupancy Weights\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: historicmodel.data[0].actual_occupancy_percent\n                }\n              ]\n            }\n          }));\n        }\n    render() {\n      return (\n        <Container>\n          <MDBContainer>\n            <h3 className=\"mt-5\">Projected vs. Actual Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            <h3 className=\"mt-5\">Actual Occupacy Rate vs. Occupancy Weights </h3>\n            <Line data={this.state.dataLine2} options={{ responsive: true }} />\n            </MDBContainer>\n          <Row>\n            <h5>Select a date to review:</h5>\n          </Row>\n          <Row>\n            <DatePicker \n                  selected={this.state.startDate}  \n                  onChange={this.handleDateChange}\n                  dateFormat=\"yyyy-MM-dd\"/>\n          </Row>\n          <Row>\n            <p></p>\n          </Row>\n          <Row>\n            <Col>\n            <h5>Projected Revenue for the Day: ${this.state.total_projected_revenue}</h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n            <h5>Actual Revenue for the Day: ${this.state.total_projected_revenue}</h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"3\">\n            Base Rate:\n            </Col>\n            <Col>\n            ${this.state.base_rate}/hr\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"3\">\n            Rate Multiplier:\n            </Col>\n            <Col>\n            {this.state.base_rate_mult}\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"3\">\n            Min. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.min_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"3\">\n            Max. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.max_thresh}%\n            </Col>\n        </Row>\n\n        </Container>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}