{"ast":null,"code":"import _classCallCheck from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/node_modules/@babel/runtime/helpers/esm/inherits\";/* Charles Owen\n* Page for Admin to view currently live price model\n* and make changes to the four most important factors\n* for the system.\n*/import React,{Component}from'react';import axios from'axios';import{Line}from\"react-chartjs-2\";import{MDBContainer}from\"mdbreact\";import{Container,Row,Col}from'reactstrap';import{Button}from'reactstrap';import{InputGroup,InputGroupText,InputGroupAddon,Input}from'reactstrap';var ViewCurrent=/*#__PURE__*/function(_Component){_inherits(ViewCurrent,_Component);function ViewCurrent(){var _this;_classCallCheck(this,ViewCurrent);_this=_possibleConstructorReturn(this,_getPrototypeOf(ViewCurrent).call(this));_this.onFormSubmit=_this.onFormSubmit.bind(_assertThisInitialized(_this));//Establish essential sub variables of state.\n_this.state={base_rate:\"Try refreshing\",base_rate_mult:\"Try refreshing\",min_thresh:\"Try refreshing\",max_thresh:\"Try refreshing\",test:[1],new_base_rate:\"\",new_base_rate_mult:\"\",new_min_thresh:\"\",new_max_thresh:\"\",total_projected_revenue:\"\",dataLine:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Static Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[65,59,80,81,56,55,40]},{label:\"Live Model Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[28,48,40,19,86,27,90]}]}};return _this;}/*\n    * On button press, push new input values to the live price model\n    * database. Component will auto remount and refresh data with new\n    * calculations. \n    */_createClass(ViewCurrent,[{key:\"onFormSubmit\",value:function onFormSubmit(){console.log('Hi!!');var updateArray={base_rate:this.state.new_base_rate,base_rate_mult:this.state.new_base_rate_mult,min_thresh:this.state.new_min_thresh,max_thresh:this.state.new_max_thresh};//alert(JSON.stringify(updateArray, null, '  '));\naxios.post('http://localhost:5000/api/liveprice',updateArray).then(function(response){alert(JSON.stringify(response,null,'  '));});// \n}/*\n    * Initial state of graph on mount. Sends request to get current\n    * model data from mongoDB\n    */},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('http://localhost:5000/api/liverevenue').then(function(livePriceModel){return _this2.setState({base_rate:livePriceModel.data[0].base_rate,base_rate_mult:livePriceModel.data[0].base_rate_mult,min_thresh:livePriceModel.data[0].min_thresh,max_thresh:livePriceModel.data[0].max_thresh,total_projected_revenue:livePriceModel.data[0].total_proj_rev,test:[1],new_base_rate:\"\",new_base_rate_mult:\"\",new_min_thresh:\"\",new_max_thresh:\"\",dataLine:{labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],datasets:[{label:\"Dynamic Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(225, 204,230, .3)\",borderColor:\"rgb(205, 130, 158)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(205, 130,1 58)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:livePriceModel.data[0].live_revenue},{label:\"Static Revenue\",fill:true,lineTension:0.3,backgroundColor:\"rgba(184, 185, 210, .3)\",borderColor:\"rgb(35, 26, 136)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(35, 26, 136)\",pointBackgroundColor:\"rgb(255, 255, 255)\",pointBorderWidth:10,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(0, 0, 0)\",pointHoverBorderColor:\"rgba(220, 220, 220, 1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:livePriceModel.data[0].static_revenue}]}});});//this data access reference. took forever to figure out\n//console.log(this.state.dataLine.labels);\n}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(Container,null,React.createElement(Row,null,React.createElement(MDBContainer,null,React.createElement(\"h3\",{className:\"mt-5\"},\"Dynamic vs. Base Rate Revenue\"),React.createElement(Line,{data:this.state.dataLine,options:{responsive:true}}))),React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"p\",null))),React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"h5\",null,\"Revenue based on admin defined values: $\",this.state.total_projected_revenue))),React.createElement(Row,null,React.createElement(Col,{sm:\"2\"},\"Base Rate:\"),React.createElement(Col,null,\"$\",this.state.base_rate,\"/hr\")),React.createElement(Row,null,React.createElement(Col,{sm:\"2\"},\"Rate Multiplier:\"),React.createElement(Col,null,this.state.base_rate_mult)),React.createElement(Row,null,React.createElement(Col,{sm:\"2\"},\"Min. Occ. Thresh:\"),React.createElement(Col,null,this.state.min_thresh,\"%\")),React.createElement(Row,null,React.createElement(Col,{sm:\"2\"},\"Max. Occ. Thresh:\"),React.createElement(Col,null,this.state.max_thresh,\"%\")),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(\"form\",{onSubmit:this.onFormSubmit},React.createElement(Row,null,React.createElement(Col,{sm:\"4\"},React.createElement(InputGroup,null,React.createElement(InputGroupAddon,{addonType:\"prepend\"},React.createElement(InputGroupText,null,\"$\")),React.createElement(Input,{type:\"text\",name:\"text\",placeholder:\"Base Rate\",onChange:function onChange(e){return _this3.setState({new_base_rate:e.target.value});}})))),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(Row,null,React.createElement(Col,{sm:\"4\"},React.createElement(InputGroup,null,React.createElement(InputGroupAddon,{addonType:\"prepend\"},React.createElement(InputGroupText,null,\"x\")),React.createElement(Input,{type:\"text\",name:\"text\",placeholder:\"Base Rate Multiplier\",onChange:function onChange(e){return _this3.setState({new_base_rate_mult:e.target.value});}})))),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(Row,null,React.createElement(Col,{sm:\"4\"},React.createElement(InputGroup,null,React.createElement(InputGroupAddon,{addonType:\"prepend\"},React.createElement(InputGroupText,null,\"%\")),React.createElement(Input,{type:\"text\",name:\"text\",placeholder:\"Min. Threshold Percent\",onChange:function onChange(e){return _this3.setState({new_min_thresh:e.target.value});}})))),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(Row,null,React.createElement(Col,{sm:\"4\"},React.createElement(InputGroup,null,React.createElement(InputGroupAddon,{addonType:\"prepend\"},React.createElement(InputGroupText,null,\"%\")),React.createElement(Input,{type:\"text\",name:\"text\",placeholder:\"Max. Threshold Percent\",onChange:function onChange(e){return _this3.setState({new_max_thresh:e.target.value});}})))),React.createElement(Row,null,React.createElement(\"p\",null)),React.createElement(Col,null,React.createElement(Row,null,React.createElement(Button,{type:\"submit\",color:\"primary\"},\"Make Live\")))));}}]);return ViewCurrent;}(Component);export{ViewCurrent as default};","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/ViewCurrent.js"],"names":["React","Component","axios","Line","MDBContainer","Container","Row","Col","Button","InputGroup","InputGroupText","InputGroupAddon","Input","ViewCurrent","onFormSubmit","bind","state","base_rate","base_rate_mult","min_thresh","max_thresh","test","new_base_rate","new_base_rate_mult","new_min_thresh","new_max_thresh","total_projected_revenue","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","console","log","updateArray","post","then","response","alert","JSON","stringify","get","livePriceModel","setState","total_proj_rev","live_revenue","static_revenue","responsive","e","target","value"],"mappings":"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","sourcesContent":["/* Charles Owen\n* Page for Admin to view currently live price model\n* and make changes to the four most important factors\n* for the system.\n*/\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\n\nexport default class ViewCurrent extends Component {\n    constructor(){\n    super();\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    //Establish essential sub variables of state.\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        test: [1],\n        new_base_rate: \"\",\n        new_base_rate_mult: \"\",\n        new_min_thresh: \"\",\n        new_max_thresh: \"\",\n        total_projected_revenue: \"\",\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Static Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [65, 59, 80, 81, 56, 55, 40]\n              \n            },\n            {\n              label: \"Live Model Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [28, 48, 40, 19, 86, 27, 90]\n            }\n          ]\n        }\n      }\n    }\n    /*\n    * On button press, push new input values to the live price model\n    * database. Component will auto remount and refresh data with new\n    * calculations. \n    */\n    onFormSubmit(){\n        console.log('Hi!!');\n        let updateArray = {base_rate: this.state.new_base_rate, base_rate_mult: this.state.new_base_rate_mult,\n                            min_thresh: this.state.new_min_thresh, max_thresh: this.state.new_max_thresh};\n        //alert(JSON.stringify(updateArray, null, '  '));\n        axios.post('http://localhost:5000/api/liveprice', updateArray).then(function(response){ \n            alert(JSON.stringify(response, null, '  '));\n        })\n       // \n    }\n    /*\n    * Initial state of graph on mount. Sends request to get current\n    * model data from mongoDB\n    */\n      componentDidMount(){\n          axios.get('http://localhost:5000/api/liverevenue').then(livePriceModel => this.setState({\n            base_rate: livePriceModel.data[0].base_rate,\n            base_rate_mult: livePriceModel.data[0].base_rate_mult,\n            min_thresh: livePriceModel.data[0].min_thresh,\n            max_thresh: livePriceModel.data[0].max_thresh,\n            total_projected_revenue: livePriceModel.data[0].total_proj_rev,\n            test: [1],\n            new_base_rate: \"\",\n            new_base_rate_mult: \"\",\n            new_min_thresh: \"\",\n            new_max_thresh: \"\",\n            dataLine: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Dynamic Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].live_revenue\n                  \n                },\n                {\n                  label: \"Static Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].static_revenue\n                }\n              ]\n            }\n          }));\n          //this data access reference. took forever to figure out\n          \n          //console.log(this.state.dataLine.labels);\n      }\n    render() {\n      return (\n        <Container>\n        <Row>\n            <MDBContainer>\n            <h3 className=\"mt-5\">Dynamic vs. Base Rate Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            </MDBContainer>\n        </Row>\n        <Row>\n            <Col>\n            <p></p>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            <h5>Revenue based on admin defined values: ${this.state.total_projected_revenue}</h5>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Base Rate:\n            </Col>\n            <Col>\n            ${this.state.base_rate}/hr\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Rate Multiplier:\n            </Col>\n            <Col>\n            {this.state.base_rate_mult}\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Min. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.min_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Max. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.max_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <form onSubmit={this.onFormSubmit}>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Base Rate\" \n            onChange = {e => this.setState({new_base_rate: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>x</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Base Rate Multiplier\" \n            \n            onChange = {e => this.setState({new_base_rate_mult: e.target.value})}/>\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>%</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Min. Threshold Percent\" \n            \n            onChange = {e => this.setState({new_min_thresh: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>%</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Max. Threshold Percent\" \n            \n            onChange = {e => this.setState({new_max_thresh: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Col>\n        <Row>\n            <Button type = \"submit\" color=\"primary\">Make Live</Button>\n        </Row>\n        </Col>\n        </form>\n        </Container>\n      \n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}