{"ast":null,"code":"var _jsxFileName = \"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/PriceModelComparison.js\";\n//import React from 'react';\nimport React, { Component } from 'react'; //import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class PriceModelComparison extends Component {\n  constructor() {\n    super();\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n      base_rate: \"Try refreshing\",\n      base_rate_mult: \"Try refreshing\",\n      min_thresh: \"Try refreshing\",\n      max_thresh: \"Try refreshing\",\n      test: [1],\n      new_base_rate: \"\",\n      new_base_rate_mult: \"\",\n      new_min_thresh: \"\",\n      new_max_thresh: \"\",\n      total_projected_revenue: \"\",\n      startDate: new Date(),\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Projected Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }, {\n          label: \"Actual Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }]\n      },\n      dataLine2: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Actual Occupancy\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [1, 2, 3, 4, 5]\n        }, {\n          label: \"Occupancy Weights\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [8, 7, 6, 5, 4]\n        }]\n      }\n    };\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Projected vs. Actual Revenue\"), React.createElement(Line, {\n      data: this.state.dataLine,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Actual Occupacy Rate vs. Occupancy Weights \"), React.createElement(Line, {\n      data: this.state.dataLine2,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Select a date to review:\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/PriceModelComparison.js"],"names":["React","Component","Container","Row","Col","Line","MDBContainer","DatePicker","PriceModelComparison","constructor","handleDateChange","bind","state","base_rate","base_rate_mult","min_thresh","max_thresh","test","new_base_rate","new_base_rate_mult","new_min_thresh","new_max_thresh","total_projected_revenue","startDate","Date","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataLine2","date","setState","render","responsive"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class PriceModelComparison extends Component {\n  constructor(){\n  super();\n  this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        test: [1],\n        new_base_rate: \"\",\n        new_base_rate_mult: \"\",\n        new_min_thresh: \"\",\n        new_max_thresh: \"\",\n        total_projected_revenue: \"\",\n        startDate: new Date(),\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Projected Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [65, 59, 80, 81, 56, 55, 40]\n              \n            },\n            {\n              label: \"Actual Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [28, 48, 40, 19, 86, 27, 90]\n            }\n          ]\n        },\n        dataLine2: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Actual Occupancy\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [1, 2, 3, 4, 5]\n              \n            },\n            {\n              label: \"Occupancy Weights\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [8, 7, 6, 5, 4]\n            }\n          ]\n        }\n      }\n    }\n    handleDateChange(date){\n      this.setState({startDate: date});\n    }   \n    render() {\n      return (\n        <Container>\n          <MDBContainer>\n            <h3 className=\"mt-5\">Projected vs. Actual Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            <h3 className=\"mt-5\">Actual Occupacy Rate vs. Occupancy Weights </h3>\n            <Line data={this.state.dataLine2} options={{ responsive: true }} />\n            </MDBContainer>\n          <Row>\n            <h5>Select a date to review:</h5>\n          </Row>\n          <Row>\n            <DatePicker selected={this.state.startDate}  onChange={this.handleDateChange}/>\n          </Row>\n          <Row>\n            <p></p>\n          </Row>\n          <Row>\n            <Col>\n\n            </Col>\n            <Col>\n\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}